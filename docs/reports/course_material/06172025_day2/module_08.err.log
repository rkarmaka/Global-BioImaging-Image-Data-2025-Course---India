Traceback (most recent call last):
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/asyncio/base_events.py", line 721, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ranit/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import imageio
from skimage import io
import matplotlib.pyplot as plt

# Load a PNG image
img_png = imageio.imread('data/nuclei.png')

# Load a JPG image
img_jpg = io.imread('example_image.jpg')

# Load a TIFF image
img_tif = io.imread('data/nuclei.tif')

# Display
plt.imshow(img_png, cmap='gray')
plt.title('PNG Image')
plt.axis('off')
plt.show()
------------------

----- stderr -----
/var/folders/5t/3zkcp0dd27s3txcmjn8jl96m0000gq/T/ipykernel_21128/2197165173.py:6: DeprecationWarning: Starting with ImageIO v3 the behavior of this function will switch to that of iio.v3.imread. To keep the current behavior (and make this warning disappear) use `import imageio.v2 as imageio` or call `imageio.v2.imread` directly.
  img_png = imageio.imread('data/nuclei.png')
------------------

[31m---------------------------------------------------------------------------[39m
[31mFileNotFoundError[39m                         Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 6[39m
[32m      3[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mmatplotlib[39;00m[34;01m.[39;00m[34;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mplt[39;00m
[32m      5[39m [38;5;66;03m# Load a PNG image[39;00m
[32m----> [39m[32m6[39m img_png = [43mimageio[49m[43m.[49m[43mimread[49m[43m([49m[33;43m'[39;49m[33;43mdata/nuclei.png[39;49m[33;43m'[39;49m[43m)[49m
[32m      8[39m [38;5;66;03m# Load a JPG image[39;00m
[32m      9[39m img_jpg = io.imread([33m'[39m[33mexample_image.jpg[39m[33m'[39m)

[36mFile [39m[32m~/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/imageio/__init__.py:97[39m, in [36mimread[39m[34m(uri, format, **kwargs)[39m
[32m     68[39m [38;5;250m[39m[33;03m"""imread(uri, format=None, **kwargs)[39;00m
[32m     69[39m 
[32m     70[39m [33;03mReads an image from the specified file. Returns a numpy array, which[39;00m
[32m   (...)[39m[32m     86[39m [33;03m    to see what arguments are available for a particular format.[39;00m
[32m     87[39m [33;03m"""[39;00m
[32m     89[39m warnings.warn(
[32m     90[39m     [33m"[39m[33mStarting with ImageIO v3 the behavior of this function will switch to that of[39m[33m"[39m
[32m     91[39m     [33m"[39m[33m iio.v3.imread. To keep the current behavior (and make this warning disappear)[39m[33m"[39m
[32m   (...)[39m[32m     94[39m     stacklevel=[32m2[39m,
[32m     95[39m )
[32m---> [39m[32m97[39m [38;5;28;01mreturn[39;00m [43mimread_v2[49m[43m([49m[43muri[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m=[49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/imageio/v2.py:359[39m, in [36mimread[39m[34m(uri, format, **kwargs)[39m
[32m    356[39m imopen_args = decypher_format_arg([38;5;28mformat[39m)
[32m    357[39m imopen_args[[33m"[39m[33mlegacy_mode[39m[33m"[39m] = [38;5;28;01mTrue[39;00m
[32m--> [39m[32m359[39m [38;5;28;01mwith[39;00m [43mimopen[49m[43m([49m[43muri[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mri[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mimopen_args[49m[43m)[49m [38;5;28;01mas[39;00m file:
[32m    360[39m     result = file.read(index=[32m0[39m, **kwargs)
[32m    362[39m [38;5;28;01mreturn[39;00m result

[36mFile [39m[32m~/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/imageio/core/imopen.py:113[39m, in [36mimopen[39m[34m(uri, io_mode, plugin, extension, format_hint, legacy_mode, **kwargs)[39m
[32m    111[39m     request.format_hint = format_hint
[32m    112[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m113[39m     request = [43mRequest[49m[43m([49m[43muri[49m[43m,[49m[43m [49m[43mio_mode[49m[43m,[49m[43m [49m[43mformat_hint[49m[43m=[49m[43mformat_hint[49m[43m,[49m[43m [49m[43mextension[49m[43m=[49m[43mextension[49m[43m)[49m
[32m    115[39m source = [33m"[39m[33m<bytes>[39m[33m"[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(uri, [38;5;28mbytes[39m) [38;5;28;01melse[39;00m uri
[32m    117[39m [38;5;66;03m# fast-path based on plugin[39;00m
[32m    118[39m [38;5;66;03m# (except in legacy mode)[39;00m

[36mFile [39m[32m~/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/imageio/core/request.py:249[39m, in [36mRequest.__init__[39m[34m(self, uri, mode, extension, format_hint, **kwargs)[39m
[32m    246[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([33mf[39m[33m"[39m[33mInvalid Request.Mode: [39m[38;5;132;01m{[39;00mmode[38;5;132;01m}[39;00m[33m"[39m)
[32m    248[39m [38;5;66;03m# Parse what was given[39;00m
[32m--> [39m[32m249[39m [38;5;28;43mself[39;49m[43m.[49m[43m_parse_uri[49m[43m([49m[43muri[49m[43m)[49m
[32m    251[39m [38;5;66;03m# Set extension[39;00m
[32m    252[39m [38;5;28;01mif[39;00m extension [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~/anaconda3/envs/gbi-python-env/lib/python3.13/site-packages/imageio/core/request.py:409[39m, in [36mRequest._parse_uri[39m[34m(self, uri)[39m
[32m    406[39m [38;5;28;01mif[39;00m is_read_request:
[32m    407[39m     [38;5;66;03m# Reading: check that the file exists (but is allowed a dir)[39;00m
[32m    408[39m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m os.path.exists(fn):
[32m--> [39m[32m409[39m         [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m([33m"[39m[33mNo such file: [39m[33m'[39m[38;5;132;01m%s[39;00m[33m'[39m[33m"[39m % fn)
[32m    410[39m [38;5;28;01melse[39;00m:
[32m    411[39m     [38;5;66;03m# Writing: check that the directory to write to does exist[39;00m
[32m    412[39m     dn = os.path.dirname(fn)

[31mFileNotFoundError[39m: No such file: '/Users/ranit/Research/github/GBI-Python-2025/course_material/06172025_day2/data/nuclei.png'

