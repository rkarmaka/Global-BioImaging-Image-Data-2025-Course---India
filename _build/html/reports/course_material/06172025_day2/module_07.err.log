Traceback (most recent call last):
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from skimage import io

# Load RGB image
rgb_image = imread('data/cells.tif')

print("RGB Image shape:", rgb_image.shape)

# Show all three channels
fig, axs = plt.subplots(1, 4, figsize=(12, 4))

axs[0].imshow(rgb_image)
axs[0].set_title("Original RGB")
axs[1].imshow(rgb_image[0, :, :], cmap='Reds')
axs[1].set_title("Red Channel")
axs[2].imshow(rgb_image[1, :, :], cmap='Greens')
axs[2].set_title("Green Channel")
axs[3].imshow(rgb_image[2, :, :], cmap='Blues')
axs[3].set_title("Blue Channel")

for ax in axs:
    ax.axis('off')
plt.tight_layout()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[6], line 11[0m
[1;32m      8[0m [38;5;66;03m# Show all three channels[39;00m
[1;32m      9[0m fig, axs [38;5;241m=[39m plt[38;5;241m.[39msubplots([38;5;241m1[39m, [38;5;241m4[39m, figsize[38;5;241m=[39m([38;5;241m12[39m, [38;5;241m4[39m))
[0;32m---> 11[0m axs[[38;5;241m0[39m][38;5;241m.[39mimshow(rgb_image)
[1;32m     12[0m axs[[38;5;241m0[39m][38;5;241m.[39mset_title([38;5;124m"[39m[38;5;124mOriginal RGB[39m[38;5;124m"[39m)
[1;32m     13[0m axs[[38;5;241m1[39m][38;5;241m.[39mimshow(rgb_image[[38;5;241m0[39m, :, :], cmap[38;5;241m=[39m[38;5;124m'[39m[38;5;124mReds[39m[38;5;124m'[39m)

File [0;32m~/anaconda3/lib/python3.11/site-packages/matplotlib/__init__.py:1442[0m, in [0;36m_preprocess_data.<locals>.inner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1439[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m   1440[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21minner[39m(ax, [38;5;241m*[39margs, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1441[0m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1442[0m         [38;5;28;01mreturn[39;00m func(ax, [38;5;241m*[39m[38;5;28mmap[39m(sanitize_sequence, args), [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1444[0m     bound [38;5;241m=[39m new_sig[38;5;241m.[39mbind(ax, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1445[0m     auto_label [38;5;241m=[39m (bound[38;5;241m.[39marguments[38;5;241m.[39mget(label_namer)
[1;32m   1446[0m                   [38;5;129;01mor[39;00m bound[38;5;241m.[39mkwargs[38;5;241m.[39mget(label_namer))

File [0;32m~/anaconda3/lib/python3.11/site-packages/matplotlib/axes/_axes.py:5665[0m, in [0;36mAxes.imshow[0;34m(self, X, cmap, norm, aspect, interpolation, alpha, vmin, vmax, origin, extent, interpolation_stage, filternorm, filterrad, resample, url, **kwargs)[0m
[1;32m   5657[0m [38;5;28mself[39m[38;5;241m.[39mset_aspect(aspect)
[1;32m   5658[0m im [38;5;241m=[39m mimage[38;5;241m.[39mAxesImage([38;5;28mself[39m, cmap[38;5;241m=[39mcmap, norm[38;5;241m=[39mnorm,
[1;32m   5659[0m                       interpolation[38;5;241m=[39minterpolation, origin[38;5;241m=[39morigin,
[1;32m   5660[0m                       extent[38;5;241m=[39mextent, filternorm[38;5;241m=[39mfilternorm,
[1;32m   5661[0m                       filterrad[38;5;241m=[39mfilterrad, resample[38;5;241m=[39mresample,
[1;32m   5662[0m                       interpolation_stage[38;5;241m=[39minterpolation_stage,
[1;32m   5663[0m                       [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m-> 5665[0m im[38;5;241m.[39mset_data(X)
[1;32m   5666[0m im[38;5;241m.[39mset_alpha(alpha)
[1;32m   5667[0m [38;5;28;01mif[39;00m im[38;5;241m.[39mget_clip_path() [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   5668[0m     [38;5;66;03m# image does not already have clipping set, clip to axes patch[39;00m

File [0;32m~/anaconda3/lib/python3.11/site-packages/matplotlib/image.py:710[0m, in [0;36m_ImageBase.set_data[0;34m(self, A)[0m
[1;32m    706[0m     [38;5;28mself[39m[38;5;241m.[39m_A [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_A[:, :, [38;5;241m0[39m]
[1;32m    708[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39m_A[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m2[39m
[1;32m    709[0m         [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_A[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m3[39m [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39m_A[38;5;241m.[39mshape[[38;5;241m-[39m[38;5;241m1[39m] [38;5;129;01min[39;00m [[38;5;241m3[39m, [38;5;241m4[39m]):
[0;32m--> 710[0m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([38;5;124m"[39m[38;5;124mInvalid shape [39m[38;5;132;01m{}[39;00m[38;5;124m for image data[39m[38;5;124m"[39m
[1;32m    711[0m                     [38;5;241m.[39mformat([38;5;28mself[39m[38;5;241m.[39m_A[38;5;241m.[39mshape))
[1;32m    713[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_A[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m3[39m:
[1;32m    714[0m     [38;5;66;03m# If the input data has values outside the valid range (after[39;00m
[1;32m    715[0m     [38;5;66;03m# normalisation), we issue a warning and then clip X to the bounds[39;00m
[1;32m    716[0m     [38;5;66;03m# - otherwise casting wraps extreme values, hiding outliers and[39;00m
[1;32m    717[0m     [38;5;66;03m# making reliable interpretation impossible.[39;00m
[1;32m    718[0m     high [38;5;241m=[39m [38;5;241m255[39m [38;5;28;01mif[39;00m np[38;5;241m.[39missubdtype([38;5;28mself[39m[38;5;241m.[39m_A[38;5;241m.[39mdtype, np[38;5;241m.[39minteger) [38;5;28;01melse[39;00m [38;5;241m1[39m

[0;31mTypeError[0m: Invalid shape (2, 256, 256) for image data
TypeError: Invalid shape (2, 256, 256) for image data

