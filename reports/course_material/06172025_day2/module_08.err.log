Traceback (most recent call last):
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import imageio
from skimage import io
import matplotlib.pyplot as plt

# Load a PNG image
img_png = imageio.imread('data/nuclei.png')

# Load a JPG image
img_jpg = io.imread('example_image.jpg')

# Load a TIFF image
img_tif = io.imread('data/nuclei.tif')

# Display
plt.imshow(img_png, cmap='gray')
plt.title('PNG Image')
plt.axis('off')
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[1], line 6[0m
[1;32m      3[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mplt[39;00m
[1;32m      5[0m [38;5;66;03m# Load a PNG image[39;00m
[0;32m----> 6[0m img_png [38;5;241m=[39m imageio[38;5;241m.[39mimread([38;5;124m'[39m[38;5;124mdata/nuclei.png[39m[38;5;124m'[39m)
[1;32m      8[0m [38;5;66;03m# Load a JPG image[39;00m
[1;32m      9[0m img_jpg [38;5;241m=[39m io[38;5;241m.[39mimread([38;5;124m'[39m[38;5;124mexample_image.jpg[39m[38;5;124m'[39m)

File [0;32m~/anaconda3/lib/python3.11/site-packages/imageio/__init__.py:97[0m, in [0;36mimread[0;34m(uri, format, **kwargs)[0m
[1;32m     68[0m [38;5;250m[39m[38;5;124;03m"""imread(uri, format=None, **kwargs)[39;00m
[1;32m     69[0m 
[1;32m     70[0m [38;5;124;03mReads an image from the specified file. Returns a numpy array, which[39;00m
[0;32m   (...)[0m
[1;32m     86[0m [38;5;124;03m    to see what arguments are available for a particular format.[39;00m
[1;32m     87[0m [38;5;124;03m"""[39;00m
[1;32m     89[0m warnings[38;5;241m.[39mwarn(
[1;32m     90[0m     [38;5;124m"[39m[38;5;124mStarting with ImageIO v3 the behavior of this function will switch to that of[39m[38;5;124m"[39m
[1;32m     91[0m     [38;5;124m"[39m[38;5;124m iio.v3.imread. To keep the current behavior (and make this warning disappear)[39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m     94[0m     stacklevel[38;5;241m=[39m[38;5;241m2[39m,
[1;32m     95[0m )
[0;32m---> 97[0m [38;5;28;01mreturn[39;00m imread_v2(uri, [38;5;28mformat[39m[38;5;241m=[39m[38;5;28mformat[39m, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m~/anaconda3/lib/python3.11/site-packages/imageio/v2.py:359[0m, in [0;36mimread[0;34m(uri, format, **kwargs)[0m
[1;32m    356[0m imopen_args [38;5;241m=[39m decypher_format_arg([38;5;28mformat[39m)
[1;32m    357[0m imopen_args[[38;5;124m"[39m[38;5;124mlegacy_mode[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 359[0m [38;5;28;01mwith[39;00m imopen(uri, [38;5;124m"[39m[38;5;124mri[39m[38;5;124m"[39m, [38;5;241m*[39m[38;5;241m*[39mimopen_args) [38;5;28;01mas[39;00m file:
[1;32m    360[0m     result [38;5;241m=[39m file[38;5;241m.[39mread(index[38;5;241m=[39m[38;5;241m0[39m, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    362[0m [38;5;28;01mreturn[39;00m result

File [0;32m~/anaconda3/lib/python3.11/site-packages/imageio/core/imopen.py:113[0m, in [0;36mimopen[0;34m(uri, io_mode, plugin, extension, format_hint, legacy_mode, **kwargs)[0m
[1;32m    111[0m     request[38;5;241m.[39mformat_hint [38;5;241m=[39m format_hint
[1;32m    112[0m [38;5;28;01melse[39;00m:
[0;32m--> 113[0m     request [38;5;241m=[39m Request(uri, io_mode, format_hint[38;5;241m=[39mformat_hint, extension[38;5;241m=[39mextension)
[1;32m    115[0m source [38;5;241m=[39m [38;5;124m"[39m[38;5;124m<bytes>[39m[38;5;124m"[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(uri, [38;5;28mbytes[39m) [38;5;28;01melse[39;00m uri
[1;32m    117[0m [38;5;66;03m# fast-path based on plugin[39;00m
[1;32m    118[0m [38;5;66;03m# (except in legacy mode)[39;00m

File [0;32m~/anaconda3/lib/python3.11/site-packages/imageio/core/request.py:247[0m, in [0;36mRequest.__init__[0;34m(self, uri, mode, extension, format_hint, **kwargs)[0m
[1;32m    244[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mInvalid Request.Mode: [39m[38;5;132;01m{[39;00mmode[38;5;132;01m}[39;00m[38;5;124m"[39m)
[1;32m    246[0m [38;5;66;03m# Parse what was given[39;00m
[0;32m--> 247[0m [38;5;28mself[39m[38;5;241m.[39m_parse_uri(uri)
[1;32m    249[0m [38;5;66;03m# Set extension[39;00m
[1;32m    250[0m [38;5;28;01mif[39;00m extension [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/anaconda3/lib/python3.11/site-packages/imageio/core/request.py:407[0m, in [0;36mRequest._parse_uri[0;34m(self, uri)[0m
[1;32m    404[0m [38;5;28;01mif[39;00m is_read_request:
[1;32m    405[0m     [38;5;66;03m# Reading: check that the file exists (but is allowed a dir)[39;00m
[1;32m    406[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m os[38;5;241m.[39mpath[38;5;241m.[39mexists(fn):
[0;32m--> 407[0m         [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m([38;5;124m"[39m[38;5;124mNo such file: [39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m"[39m [38;5;241m%[39m fn)
[1;32m    408[0m [38;5;28;01melse[39;00m:
[1;32m    409[0m     [38;5;66;03m# Writing: check that the directory to write to does exist[39;00m
[1;32m    410[0m     dn [38;5;241m=[39m os[38;5;241m.[39mpath[38;5;241m.[39mdirname(fn)

[0;31mFileNotFoundError[0m: No such file: '/Users/ranit/Research/github/GBI-Python-2025/course_material/06172025_day2/data/nuclei.png'
FileNotFoundError: No such file: '/Users/ranit/Research/github/GBI-Python-2025/course_material/06172025_day2/data/nuclei.png'

