Traceback (most recent call last):
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ranit/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Distance transform
distance = ndi.distance_transform_edt(binary)
plt.imshow(distance, cmap='magma')
plt.title('Distance Transform')
plt.axis('off')
plt.show()

# Find peaks in distance image
from skimage.feature import peak_local_max
local_maxi = feature.peak_local_max(distance, labels=binary, footprint=np.ones((3, 3)))

# Markers
markers = ndi.label(local_maxi)[0]

# Apply watershed
labels = segmentation.watershed(-distance, markers, mask=binary)

# Visualize
plt.imshow(color.label2rgb(labels, image=image, bg_label=0))
plt.title("Watershed Segmentation")
plt.axis('off')
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[5], line 16[0m
[1;32m     13[0m markers [38;5;241m=[39m ndi[38;5;241m.[39mlabel(local_maxi)[[38;5;241m0[39m]
[1;32m     15[0m [38;5;66;03m# Apply watershed[39;00m
[0;32m---> 16[0m labels [38;5;241m=[39m segmentation[38;5;241m.[39mwatershed([38;5;241m-[39mdistance, markers, mask[38;5;241m=[39mbinary)
[1;32m     18[0m [38;5;66;03m# Visualize[39;00m
[1;32m     19[0m plt[38;5;241m.[39mimshow(color[38;5;241m.[39mlabel2rgb(labels, image[38;5;241m=[39mimage, bg_label[38;5;241m=[39m[38;5;241m0[39m))

File [0;32m~/anaconda3/lib/python3.11/site-packages/skimage/segmentation/_watershed.py:199[0m, in [0;36mwatershed[0;34m(image, markers, connectivity, offset, mask, compactness, watershed_line)[0m
[1;32m     86[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mwatershed[39m(image, markers[38;5;241m=[39m[38;5;28;01mNone[39;00m, connectivity[38;5;241m=[39m[38;5;241m1[39m, offset[38;5;241m=[39m[38;5;28;01mNone[39;00m, mask[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     87[0m               compactness[38;5;241m=[39m[38;5;241m0[39m, watershed_line[38;5;241m=[39m[38;5;28;01mFalse[39;00m):
[1;32m     88[0m [38;5;250m    [39m[38;5;124;03m"""Find watershed basins in `image` flooded from given `markers`.[39;00m
[1;32m     89[0m 
[1;32m     90[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    197[0m [38;5;124;03m    separate overlapping spheres.[39;00m
[1;32m    198[0m [38;5;124;03m    """[39;00m
[0;32m--> 199[0m     image, markers, mask [38;5;241m=[39m _validate_inputs(image, markers, mask, connectivity)
[1;32m    200[0m     connectivity, offset [38;5;241m=[39m _validate_connectivity(image[38;5;241m.[39mndim, connectivity,
[1;32m    201[0m                                                   offset)
[1;32m    203[0m     [38;5;66;03m# pad the image, markers, and mask so that we can use the mask to[39;00m
[1;32m    204[0m     [38;5;66;03m# keep from running off the edges[39;00m

File [0;32m~/anaconda3/lib/python3.11/site-packages/skimage/segmentation/_watershed.py:76[0m, in [0;36m_validate_inputs[0;34m(image, markers, mask, connectivity)[0m
[1;32m     74[0m     markers [38;5;241m*[39m[38;5;241m=[39m mask
[1;32m     75[0m [38;5;28;01melse[39;00m:
[0;32m---> 76[0m     markers [38;5;241m=[39m np[38;5;241m.[39masanyarray(markers) [38;5;241m*[39m mask
[1;32m     77[0m     [38;5;28;01mif[39;00m markers[38;5;241m.[39mshape [38;5;241m!=[39m image[38;5;241m.[39mshape:
[1;32m     78[0m         message [38;5;241m=[39m ([38;5;124mf[39m[38;5;124m'[39m[38;5;124m`markers` (shape [39m[38;5;132;01m{[39;00mmarkers[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m) must have same [39m[38;5;124m'[39m
[1;32m     79[0m                    [38;5;124mf[39m[38;5;124m'[39m[38;5;124mshape as `image` (shape [39m[38;5;132;01m{[39;00mimage[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m)[39m[38;5;124m'[39m)

[0;31mValueError[0m: operands could not be broadcast together with shapes (536,2) (512,512) 
ValueError: operands could not be broadcast together with shapes (536,2) (512,512) 

